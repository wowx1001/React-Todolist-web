{"version":3,"sources":["component/TodoContext.js","component/ListHead.js","component/TodoItem.js","component/ListItems.js","component/CreateItems.js","component/ListTemplate.js","App.js","reportWebVitals.js","index.js"],"names":["initialTodo","id","text","done","todoReducer","state","action","type","concat","todo","map","filter","Error","TodoStateContext","createContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","children","useReducer","dispatch","nextId","useRef","Provider","value","useTodoState","useContext","useTodoDispatch","ListHeadBlock","styled","div","ListHead","todos","undoneTasks","dateString","Date","toLocaleDateString","year","month","day","console","log","className","length","RemoveIconBlock","ItemBlock","li","Text","props","css","CheckBox","ListItems","onClick","size","React","memo","ListBlock","ul","item","TodoItem","CircleButton","button","open","InsertForm","form","InputBox","input","CreateItem","useState","setOpen","setValue","onSubmit","e","preventDefault","current","onChange","target","autoFocus","placeholder","ListTemplate","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef18ebd6.chunk.js","sourcesContent":["import React, {useReducer, createContext, useContext, useRef} from 'react';\r\n\r\nconst initialTodo = [\r\n    {\r\n        id:1,\r\n        text: '할일 목록1',\r\n        done: true\r\n    },\r\n    {\r\n        id:2,\r\n        text: '할일 목록2',\r\n        done: true\r\n    },\r\n    {\r\n        id:3,\r\n        text: '할일 목록3',\r\n        done: true\r\n    },\r\n    {\r\n        id:4,\r\n        text: '할일 목록4',\r\n        done: true\r\n    },\r\n];\r\n\r\nconst todoReducer = (state, action)=>{\r\n    switch (action.type){\r\n        case 'ADD':\r\n            return state.concat(action.todo);\r\n        case 'TOGGLE':\r\n            return state.map(todo=>\r\n                todo.id === action.id ? {...todo, done:!todo.done}:todo\r\n            );\r\n        case 'REMOVE':\r\n            return state.filter(todo=>todo.id !== action.id);\r\n        default:\r\n            throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n}\r\n\r\nconst TodoStateContext = createContext();\r\nconst TodoDispatchContext = createContext();\r\nconst TodoNextIdContext = createContext();\r\n\r\nexport function TodoProvider({children}){\r\n    const [state, dispatch] = useReducer(todoReducer, initialTodo);\r\n    const nextId = useRef(5);\r\n    return (\r\n        <TodoStateContext.Provider value={state}>\r\n            <TodoDispatchContext.Provider value={dispatch}>\r\n                <TodoNextIdContext.Provider value={nextId}>\r\n                    {children}\r\n                </TodoNextIdContext.Provider>\r\n            </TodoDispatchContext.Provider>\r\n        </TodoStateContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useTodoState = () => {\r\n    return useContext(TodoStateContext);\r\n}\r\n\r\nexport const useTodoDispatch = () => {\r\n    return useContext(TodoDispatchContext);\r\n}\r\n\r\nexport const useTodoNextId = () => {\r\n    return useContext(TodoNextIdContext);\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport {useTodoState} from './TodoContext.js';\r\n\r\n\r\nconst ListHeadBlock=styled.div`\r\n    @import url('https://fonts.googleapis.com/css2?family=Nanum+Gothic&display=swap');\r\n    background-color: #38d9a9;\r\n    height: 76px;\r\n    padding-top: 16px;\r\n    padding-left: 16px;\r\n    font-family: 'Nanum Gothic', sans-serif;\r\n    color:white;\r\n    border-radius: 20px 20px 0 0;\r\n    .tasks-left {\r\n        color: #20c997;\r\n        font-size: 18px;\r\n        margin-top: 40px;\r\n        font-weight: bold;\r\n        text-align:center;\r\n      }\r\n`;\r\n\r\n\r\nconst ListHead = ()=>{\r\n    const todos = useTodoState();\r\n    const undoneTasks = todos.filter(todo => !todo.done);\r\n    const today = new Date();\r\n    const dateString = today.toLocaleDateString('ko-KR', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric'\r\n    });\r\n\r\n    console.log(todos);\r\n    return(\r\n        <ListHeadBlock>\r\n            <h1>{dateString}</h1>\r\n            <div className=\"tasks-left\">-할 일 {undoneTasks.length}개 남음-</div>\r\n        </ListHeadBlock>\r\n    );\r\n}\r\nexport default ListHead;","import React from 'react';\r\nimport styled,{ css } from 'styled-components';\r\nimport {MdDelete,MdDone} from \"react-icons/md\";\r\nimport {useTodoDispatch} from \"./TodoContext.js\";\r\n\r\nconst RemoveIconBlock = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #dee2e6;\r\n    font-size: 24px;    \r\n    cursor: pointer;\r\n    &:hover {\r\n      color: #ff6b6b;\r\n    }\r\n    display: none;\r\n`;\r\n\r\nconst ItemBlock = styled.li`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 30px 0;\r\n    &:hover {\r\n        ${RemoveIconBlock}{\r\n            display:inherit;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Text = styled.div`\r\n    font-size:21px;\r\n    width:270px;\r\n    ${props =>\r\n        props.done&&css`\r\n        color:#bdbebd;\r\n        text-decoration:line-through;\r\n    `\r\n    }\r\n`;\r\n\r\nconst CheckBox = styled.div`\r\n    width:32px;\r\n    height:32px;\r\n    border: 2px solid black;\r\n    margin-right: 20px;\r\n    cursor: pointer;\r\n    ${props =>\r\n        props.done&&css`\r\n        border: 2px solid #20c997;\r\n        color:#20c997;\r\n    `\r\n    }\r\n`; \r\n\r\n\r\nconst ListItems = ({id, done, text})=>{\r\n    const dispatch = useTodoDispatch();\r\n    const onToggle = () => dispatch({type:\"TOGGLE\",id});\r\n    const onRemove = () => dispatch({type:\"REMOVE\",id});\r\n    return(\r\n        <ItemBlock>\r\n            <CheckBox done={done} onClick={onToggle}>\r\n                {done && <MdDone size=\"32\"/>}\r\n            </CheckBox>\r\n            <Text done={done}>{text}</Text>\r\n            <RemoveIconBlock onClick={onRemove}>\r\n                <MdDelete></MdDelete>\r\n            </RemoveIconBlock>\r\n        </ItemBlock>\r\n    );\r\n}\r\n\r\nexport default React.memo(ListItems);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport TodoItem from './TodoItem.js';\r\nimport {useTodoState} from './TodoContext';\r\n\r\n\r\nconst ListBlock = styled.ul`\r\n    width: 360px;\r\n    height: 360px;\r\n    margin: 50px 50px;\r\n    list-style: none;\r\n    padding: 0;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst ListItems = ()=>{\r\n    const todos = useTodoState();\r\n    return(\r\n        <ListBlock>\r\n            {todos.map(item=>(\r\n             <TodoItem\r\n                key={item.id}\r\n                id={item.id}\r\n                text={item.text}\r\n                done={item.done}\r\n             >\r\n             </TodoItem>\r\n            ))}\r\n        </ListBlock>\r\n    );\r\n}\r\n\r\nexport default ListItems;","import React, {useState} from 'react';\r\nimport styled,{ css } from 'styled-components';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport {useTodoDispatch, useTodoNextId} from './TodoContext.js';\r\n\r\n\r\nconst CircleButton = styled.button`\r\n  background: #38d9a9;\r\n  &:hover {\r\n    background: #63e6be;\r\n  }\r\n  &:active {\r\n    background: #20c997;\r\n  }\r\n\r\n  z-index: 5;\r\n  cursor: pointer;\r\n  width: 80px;\r\n  height: 80px;\r\n  display: block;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 60px;\r\n  position: absolute;\r\n  left: 50%;\r\n  bottom: 194px;\r\n  transform: translate(-50%, 50%);\r\n  color: white;\r\n  border-radius: 50%;\r\n  border: none;\r\n  outline: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  transition: 0.125s all ease-in;\r\n  ${props =>\r\n    props.open &&\r\n    css`\r\n      background: #ff6b6b;\r\n      &:hover {\r\n        background: #ff8787;\r\n      }\r\n      &:active {\r\n        background: #fa5252;\r\n      }\r\n      transform: translate(-50%, 50%) rotate(45deg);\r\n  `}\r\n`;\r\n\r\nconst InsertForm = styled.form`\r\n    width:100%;\r\n    height:200px;\r\n    text-align: center;\r\n    border-top: 1px solid #dee2e6;\r\n`;\r\n\r\nconst InputBox = styled.input`\r\n    padding: 12px;\r\n    border-radius: 4px;\r\n    border: 1px solid #dee2e6;\r\n    width: 360px;\r\n    outline: none;\r\n    font-size: 18px;\r\n    box-sizing: border-box;\r\n    margin-top: 50px;\r\n`;\r\n\r\nconst CreateItem = () =>{\r\n  const [open, setOpen] = useState(false);\r\n  const [value, setValue] = useState('');\r\n\r\n  const dispatch = useTodoDispatch();\r\n  const nextId = useTodoNextId();\r\n\r\n  const onToggle = () => setOpen(!open);\r\n  const onChange = e => setValue(e.target.value);\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch({\r\n      type: 'ADD',\r\n      todo: {\r\n        id: nextId.current,\r\n        text: value,\r\n        done: false\r\n      }\r\n    })\r\n    setValue('');\r\n    setOpen(false);\r\n    nextId.current += 1;\r\n  }\r\n\r\n  return(\r\n      <>\r\n          {open&&\r\n              (<InsertForm onSubmit={onSubmit}>\r\n                  <InputBox onChange={onChange} autoFocus placeholder=\"할 일을 입력 후, Enter 를 누르세요\" ></InputBox>\r\n              </InsertForm>)\r\n          }\r\n          <CircleButton onClick={onToggle} open={open}>\r\n            <MdAdd></MdAdd>\r\n          </CircleButton>\r\n      </>\r\n  );\r\n}\r\nexport default CreateItem;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ListHead from './ListHead';\r\nimport ListItems from './ListItems';\r\nimport CreateItem from './CreateItems';\r\n\r\nfunction ListTemplate(){\r\n    const ListTemplate = styled.div`\r\n    width: 460px;\r\n    height: 720px;\r\n    background:#f2f3f59e;\r\n    margin: 0 auto;\r\n    box-shadow: 0 1px 16px lightgrey;\r\n    margin-top: 96px;\r\n    margin-bottom: 32px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 20px;\r\n    `;\r\n    return(\r\n        <ListTemplate>\r\n            <ListHead></ListHead>\r\n            <ListItems></ListItems>\r\n            <CreateItem></CreateItem>\r\n        </ListTemplate>\r\n    );\r\n}\r\nexport default ListTemplate;","import React from 'react';\nimport './App.css';\nimport ListTemplate from './component/ListTemplate.js';\nimport {TodoProvider} from './component/TodoContext.js';\n\nfunction App(){\n  return (\n    <TodoProvider>\n        <ListTemplate>\n      </ListTemplate>\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}